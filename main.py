# main.py
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from config import BOT_TOKEN, LOG_FILE, LOG_LEVEL
from handlers import router as handlers_router
from admin import router as admin_router
from triggers import router as triggers_router
from database import Database

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=getattr(logging, LOG_LEVEL),
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler(LOG_FILE, encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

async def main():
    logger.info("ü§ñ **–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...**")
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher(storage=MemoryStorage())
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = Database("bot_database.db")
    logger.info("‚úÖ **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞**")
    
    dp.include_router(handlers_router)
    dp.include_router(admin_router)
    dp.include_router(triggers_router)
    
    logger.info("ü§ñ **–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω**")
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞**: {e}", exc_info=True)
    finally:
        db.close()

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫–∞—é main.py...")
    asyncio.run(main())